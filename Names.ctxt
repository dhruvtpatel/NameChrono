#BlueJ class context
comment0.target=Names
comment0.text=\r\n\ Names\ class\ looks\ at\ NameRecord\ objects\ and\ creates\ a\ variety\ of\ methods\ (like\ printing\ rank,\ printing\ trends\ in\ popularity,\ and\ more).\r\n\r\n\ @author\ Dhruv\ Patel\r\n\ @version\ 12.15.2021\r\n
comment1.params=
comment1.target=Names()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Names\r\n\ \r\n\ @throws\ FileNotFoundException\r\n
comment10.params=decade
comment10.target=java.lang.String\ mostPopularName(int)
comment10.text=\r\n\ Method\ to\ determine\ the\ most\ popular\ name\ in\ a\ specified\ decade\r\n\ \r\n\ NOTE\:\ This\ is\ a\ method\ personally\ added\ (not\ required\ by\ directions)\r\n\ \r\n\ @param\ decade\r\n\ @return\ str\r\n
comment11.params=decade
comment11.target=java.lang.String\ leastPopularName(int)
comment11.text=\r\n\ Method\ to\ determine\ the\ least\ popular\ name\ in\ a\ specified\ decade\r\n\ \r\n\ NOTE\:\ This\ is\ a\ method\ personally\ added\ (not\ required\ by\ directions)\r\n\ \r\n\ @param\ decade\r\n\ @return\ str\r\n
comment12.params=position\ decade
comment12.target=java.lang.String\ positionReturnName(int,\ int)
comment12.text=\r\n\ Method\ to\ print\ the\ name\ at\ a\ specificied\ rank\ in\ any\ decade\r\n\ \r\n\ NOTE\:\ This\ is\ a\ method\ personally\ added\ (not\ required\ by\ directions)\r\n\ \r\n\ @param\ position\r\n\ @param\ decade\r\n\ @return\ str\r\n
comment13.params=name\ decade1\ decade2
comment13.target=java.lang.String\ changeInPopularity(java.lang.String,\ int,\ int)
comment13.text=\r\n\ Method\ to\ determine\ the\ change\ in\ popularity\ (number\ of\ ranks\ moved)\r\n\ \r\n\ NOTE\:\ This\ is\ a\ method\ personally\ added\ (not\ required\ by\ directions)\r\n\ \r\n\ @param\ name\r\n\ @param\ decade1\r\n\ @param\ decade2\r\n\ @return\ str\r\n
comment2.params=name
comment2.target=NameRecord\ getRecordByName(java.lang.String)
comment2.text=\r\n\ Method\ that\ will\ be\ accessed\ by\ other\ methods\ -\ finds\ the\ NameRecord\ object\ for\ the\ specific\ name\r\n\ \r\n\ @param\ name\r\n\ @return\ null\r\n
comment3.params=name
comment3.target=java.util.ArrayList\ printRank(java.lang.String)
comment3.text=\r\n\ Method\ to\ print\ the\ rank\ of\ a\ name\ in\ every\ decade\r\n\ \r\n\ @param\ name\r\n\ @return\ name\r\n
comment4.params=
comment4.target=java.lang.String\ allDecades()
comment4.text=\r\n\ Method\ to\ print\ the\ names\ that\ have\ been\ ranked\ in\ every\ decade\r\n\ \r\n\ @return\ str\r\n\ @throws\ IOException\r\n
comment5.params=
comment5.target=java.lang.String\ oneDecades()
comment5.text=\r\n\ Method\ to\ print\ the\ name\ that\ has\ been\ ranked\ in\ only\ one\ decade\r\n\ \r\n\ @return\ str\r\n\ @throws\ IOException\r\n
comment6.params=name\ decade
comment6.target=java.lang.String\ rankName(java.lang.String,\ int)
comment6.text=\r\n\ Method\ to\ print\ the\ rank\ of\ a\ name\ at\ a\ specific\ decade\r\n\ \r\n\ @return\ output\r\n\ @param\ name\r\n\ @param\ decade\r\n
comment7.params=
comment7.target=java.lang.String\ popularityIncreasing()
comment7.text=\r\n\ Method\ to\ print\ the\ names\ whose\ popularity\ has\ consistently\ increased\r\n\ \r\n\ @return\ str\r\n
comment8.params=
comment8.target=java.lang.String\ popularityDecreasing()
comment8.text=\r\n\ Method\ to\ print\ the\ names\ whose\ popularity\ has\ consistently\ decreased\r\n\ \r\n\ NOTE\:\ This\ is\ a\ method\ personally\ added\ (not\ required\ by\ directions)\r\n\ \r\n\ @return\ str\r\n
comment9.params=name1\ name2\ decade
comment9.target=java.lang.String\ isOneNameMorePopular(java.lang.String,\ java.lang.String,\ int)
comment9.text=\r\n\ Method\ to\ determine\ if\ one\ name\ was\ more\ popular\ than\ another\ in\ a\ specific\ decade\r\n\ \r\n\ NOTE\:\ This\ is\ a\ method\ personally\ added\ (not\ required\ by\ directions)\r\n\ \r\n\ @param\ name1\r\n\ @param\ name2\r\n\ @param\ decade\r\n\ @return\ output\r\n
numComments=14
